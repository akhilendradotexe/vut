{
    "openapi": "3.0.0",
    "info": {
        "title": "Video Uploading Tool Document",
        "version": "2.0.0",
        "description": "API Documentation for Video Uploading Tool"
    },
    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        {
            "BearerAuth": []
        }
    ],
    "servers": [
        {
            "url": "http://localhost:4000",
            "description": "Local Development Server"
        },
        {
            "url": "https://vut-backend.tcdev.site",
            "description": "Live Production Server"
        }
    ],
    "paths": {
        "/api/auth/login": {
            "post": {
                "summary": "Login User",
                "description": "Login existing user",
                "tags": [
                    "User Login"
                ],
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "You are successfully logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 12
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "emample@gmail.com"
                                                        },
                                                        "username": {
                                                            "type": "string",
                                                            "example": "example user"
                                                        }
                                                    }
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email and password are required"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/password/change": {
            "post": {
                "summary": "Change Password",
                "description": "Change User Password",
                "tags": [
                    "User Password"
                ],
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "currentPassword": {
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "newPassword": {
                                        "type": "string",
                                        "minLength": 8,
                                        "maxLength": 128
                                    },
                                    "confirmPassword": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "currentPassword",
                                    "newPassword",
                                    "confirmPassword"
                                ],
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Current password is incorrect"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/password/forgot": {
            "post": {
                "summary": "Password reset link",
                "description": "Password link sent to user email",
                "tags": [
                    "User Password"
                ],
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "required": [
                                    "email"
                                ],
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Password reset link sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset Link sent"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "all fields are required"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/password/reset": {
            "post": {
                "summary": "Reset User Password",
                "description": "Reset Password of the user with the link",
                "tags": [
                    "User Password"
                ],
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "maxLength": 128
                                    },
                                    "confirmPassword": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "password",
                                    "confirmPassword"
                                ],
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password has been reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password has been reset successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Confirm password does not match new password"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/video/upload": {
            "post": {
                "summary": "Upload Video",
                "description": "Uploading user recorded video",
                "tags": [
                    "Videos"
                ],
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string",
                                        "maxLength": 1000
                                    },
                                    "duration": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "thumbnail_img": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "processing",
                                            "completed",
                                            "failed"
                                        ]
                                    },
                                    "storage": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "recordingId": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "title",
                                    "thumbnail_img"
                                ],
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Video uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Video uploaded successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "is_deleted": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "views": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "video_id": {
                                                    "type": "integer",
                                                    "example": 27
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 24
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "My First Processed Video"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "This is a test upload after merging chunks"
                                                },
                                                "video_url": {
                                                    "type": "string",
                                                    "example": "/session_1755170052433/manifest.m3u8"
                                                },
                                                "duration": {
                                                    "type": "integer",
                                                    "example": 120
                                                },
                                                "thumbnail_img": {
                                                    "type": "string",
                                                    "example": "https://example.com/thumb.jpg"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "pending",
                                                        "processing",
                                                        "completed",
                                                        "failed"
                                                    ],
                                                    "example": "completed"
                                                },
                                                "created_date": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1755170414476
                                                },
                                                "updated_date": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1755170414476
                                                },
                                                "storage": {
                                                    "type": "integer",
                                                    "example": 300
                                                },
                                                "unique_video_key": {
                                                    "type": "string",
                                                    "example": "303482e81eb729fe33143e6a12a2e503"
                                                },
                                                "shareable_link": {
                                                    "type": "string",
                                                    "example": "/session_1755170052433/manifest.m3u8/27?key=303482e81eb729fe33143e6a12a2e503"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Video upload failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Video file is missing or invalid format"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/video/resume-upload/{id}": {
            "patch": {
                "summary": "Update Resume Video Status",
                "description": "Updates the status of a user's uploaded resume video",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "status"
                                ],
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Resume video status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Resume video status updated successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Resume video status update failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid video ID or status value"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/video/list": {
            "get": {
                "summary": "User videos",
                "description": "Get all User uploaded videos",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        },
                        "description": "No description provided"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 10
                        },
                        "description": "No description provided"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "No description provided"
                    },
                    {
                        "name": "video_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "No description provided"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "processing",
                                "completed",
                                "failed"
                            ]
                        },
                        "description": "No description provided"
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "No description provided"
                    },
                    {
                        "name": "created_to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "No description provided"
                    },
                    {
                        "name": "views_min",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        },
                        "description": "No description provided"
                    },
                    {
                        "name": "views_max",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        },
                        "description": "No description provided"
                    }
                ],
                "requestBody": {},
                "responses": {
                    "200": {
                        "description": "Videos retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Videos retrieved successfully"
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "limit": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "video_id": {
                                                        "type": "integer",
                                                        "example": 20
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 12
                                                    },
                                                    "video_url": {
                                                        "type": "string",
                                                        "example": "https://www.pexels.com/video/drops-of-liquid-on-a-tray-to-be-use-as-samples-3195394/"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "completed"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Second video"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "This is my first video"
                                                    },
                                                    "duration": {
                                                        "type": "string",
                                                        "example": "23m"
                                                    },
                                                    "thumbnail_img": {
                                                        "type": "string",
                                                        "example": "https://www.pexel.com"
                                                    },
                                                    "is_deleted": {
                                                        "type": "integer",
                                                        "example": 0
                                                    },
                                                    "created_date": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1754650018366
                                                    },
                                                    "updated_date": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1754650018366
                                                    },
                                                    "views": {
                                                        "type": "integer",
                                                        "example": 0
                                                    },
                                                    "shareable_link": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "example": null
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query params or unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid page or limit value"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/video/{id}": {
            "get": {
                "summary": "User Videos by id",
                "description": "Get video by video Id",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "No description provided"
                    }
                ],
                "requestBody": {},
                "responses": {
                    "200": {
                        "description": "Video retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Video retrieved successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "video_id": {
                                                    "type": "integer",
                                                    "example": 18
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 12
                                                },
                                                "video_url": {
                                                    "type": "string",
                                                    "example": "https://www.pexels.com/video/drops-of-liquid-on-a-tray-to-be-use-as-samples-3195394/"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "pending",
                                                        "processing",
                                                        "completed",
                                                        "failed"
                                                    ],
                                                    "example": "completed"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Second video"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "This is my first video"
                                                },
                                                "duration": {
                                                    "type": "string",
                                                    "example": "23m"
                                                },
                                                "thumbnail_img": {
                                                    "type": "string",
                                                    "example": "https://www.pexel.com"
                                                },
                                                "is_deleted": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "created_date": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1754649031304
                                                },
                                                "updated_date": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1754649031304
                                                },
                                                "views": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "shareable_link": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "example": null
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Video not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Video with ID 18 not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/video/upload-chunk": {
            "post": {
                "summary": "Upload Video",
                "description": "Upload video",
                "tags": [
                    "User Video"
                ],
                "parameters": [],
                "requestBody": {},
                "responses": {
                    "201": {
                        "description": "You are successfully uploaded video",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/video/record-complete": {
            "post": {
                "summary": "Record Complete",
                "description": "Record Complete",
                "tags": [
                    "User Video"
                ],
                "parameters": [],
                "requestBody": {},
                "responses": {
                    "201": {
                        "description": "You are successfully record complete",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/video/view/{id}": {
            "get": {
                "summary": "Increase View count",
                "description": "View Count added whenever any user viewed the video",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {},
                "responses": {
                    "200": {
                        "description": "Video retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Video retrieved successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "video_id": {
                                                    "type": "integer",
                                                    "example": 18
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Second video"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "This is my first video"
                                                },
                                                "video_url": {
                                                    "type": "string",
                                                    "example": "https://www.pexels.com/video/drops-of-liquid-on-a-tray-to-be-use-as-samples-3195394/"
                                                },
                                                "duration": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "thumbnail_img": {
                                                    "type": "string",
                                                    "example": "https://www.pexel.com"
                                                },
                                                "views": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "created_date": {
                                                    "type": "integer",
                                                    "example": 1754649031304,
                                                    "description": "Epoch timestamp in milliseconds"
                                                },
                                                "view_incremented": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "user_authenticated": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Video not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Video not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/video/view/v2/{id}": {
            "get": {
                "summary": "View video with access control",
                "description": "View video with key-based access control and view count tracking",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {},
                "responses": {}
            }
        },
        "/api/dashboard/": {
            "get": {
                "summary": "get /api/dashboard/",
                "description": "",
                "tags": [
                    "Dashboard"
                ],
                "parameters": [],
                "requestBody": {},
                "responses": {}
            }
        },
        "/api/admin/auth/login": {
            "post": {
                "summary": "Login Admin",
                "description": "Login existing admin",
                "tags": [
                    "Admin Login"
                ],
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "You are successfully logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 16
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "admin@gmail.com"
                                                        },
                                                        "username": {
                                                            "type": "string",
                                                            "example": "Admin"
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "example": "admin"
                                                        }
                                                    }
                                                },
                                                "accessToken": {
                                                    "type": "string",
                                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                                },
                                                "refreshToken": {
                                                    "type": "string",
                                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email and password are required"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/users": {
            "get": {
                "summary": "Get Users for Admin",
                "description": "Fetch paginated users for admin dashboard",
                "tags": [
                    "Admin Dashboard"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        },
                        "description": "No description provided"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 10
                        },
                        "description": "No description provided"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "No description provided"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "No description provided"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "No description provided"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "No description provided"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created_date",
                                "username",
                                "email",
                                "status"
                            ]
                        },
                        "description": "No description provided"
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        },
                        "description": "No description provided"
                    }
                ],
                "requestBody": {},
                "responses": {
                    "200": {
                        "description": "Data fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data fetched successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "totalPages": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "currentPage": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "limit": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "users": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "user_id": {
                                                                "type": "integer",
                                                                "example": 19
                                                            },
                                                            "username": {
                                                                "type": "string",
                                                                "example": "Jaishree Kushwah"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "jaishree.kushwah@techcarrel.com"
                                                            },
                                                            "totalVideos": {
                                                                "type": "integer",
                                                                "example": 0
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "Active"
                                                            },
                                                            "registeredDate": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-08-13T07:33:34.859Z"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No users found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No users found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/users/{id}": {
            "patch": {
                "summary": "Admin can block and unblock the user",
                "description": "Admin can block and unblock the user",
                "tags": [
                    "Admin Dashboard"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {},
                "responses": {
                    "200": {
                        "description": "User status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User status updated to inactive"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 16
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "inactive"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid status value provided"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/dashboard/statistics": {
            "get": {
                "summary": "Statistics of User Videos",
                "description": "Fetch User videos statistics",
                "tags": [
                    "Admin Dashboard"
                ],
                "parameters": [],
                "requestBody": {},
                "responses": {
                    "200": {
                        "description": "Video statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Video statistics retrieved successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "total_videos": {
                                                    "type": "integer",
                                                    "example": 21
                                                },
                                                "total_duration": {
                                                    "type": "string",
                                                    "example": "2 hrs 0 min"
                                                },
                                                "total_storage": {
                                                    "type": "string",
                                                    "example": "1.85 GB"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/oauth/google": {
            "get": {
                "summary": "Initiate Google OAuth",
                "description": "Redirects user to Google OAuth consent screen",
                "tags": [
                    "Google Authentication"
                ],
                "parameters": [],
                "requestBody": {},
                "responses": {
                    "302": {
                        "description": "Redirect to Google OAuth",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/oauth/google/callback": {
            "get": {
                "summary": "Google OAuth Callback",
                "description": "Handle Google OAuth callback and return JWT token",
                "tags": [
                    "Google Authentication"
                ],
                "parameters": [],
                "requestBody": {},
                "responses": {
                    "200": {
                        "description": "Google authentication successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Google authentication successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user": {
                                                    "type": "object",
                                                    "properties": {
                                                        "user_id": {
                                                            "type": "integer",
                                                            "example": 12
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "user@gmail.com"
                                                        },
                                                        "username": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "avatar_url": {
                                                            "type": "string",
                                                            "example": "https://example.com/avatar.jpg"
                                                        },
                                                        "role": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "status": {
                                                            "type": "string",
                                                            "example": "Active"
                                                        }
                                                    }
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Google authentication failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Google authentication failed"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Account is inactive",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your account is inactive. Please contact support to reactivate your account."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Token generation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token generation failed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/oauth/refresh-token": {
            "post": {
                "summary": "Refresh Access Token",
                "description": "Generate new access token using refresh token",
                "tags": [
                    "Google Authentication"
                ],
                "parameters": [],
                "requestBody": {},
                "responses": {
                    "200": {
                        "description": "Access token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Access token refreshed successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "accessToken": {
                                                    "type": "string",
                                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Refresh token is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Refresh token is required"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Refresh token expired"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}